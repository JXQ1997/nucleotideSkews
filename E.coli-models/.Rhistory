m.aa <- addReact(m.aa, "phe_DASH_L_tr", c("phe_DASH_L[c]", "phe_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_phe_DASH_L(e)", c("phe_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "pro_DASH_L_tr", c("pro_DASH_L[c]", "pro_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_pro_DASH_L(e)", c("pro_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "ser_DASH_L_tr", c("ser_DASH_L[c]", "ser_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ser_DASH_L(e)", c("ser_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "thr_DASH_L_tr", c("thr_DASH_L[c]", "thr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_thr_DASH_L(e)", c("thr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "trp_DASH_L_tr", c("trp_DASH_L[c]", "trp_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_trp_DASH_L(e)", c("trp_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "tyr_DASH_L_tr", c("tyr_DASH_L[c]", "tyr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_tyr_DASH_L(e)", c("tyr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "val_DASH_L_tr", c("val_DASH_L[c]", "val_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_val_DASH_L(e)", c("val_DASH_L[e]"), c(-1))   # transport reaction to NIL
aa.transports <- c("EX_ala_DASH_L(e)", "EX_arg_DASH_L(e)", "EX_asn_DASH_L(e)", "EX_asp_DASH_L(e)", "EX_cys_DASH_L(e)", "EX_gln_DASH_L(e)", "EX_glu_DASH_L(e)",
"EX_gly(e)", "EX_his_DASH_L(e)", "EX_ile_DASH_L(e)", "EX_leu_DASH_L(e)", "EX_lys_DASH_L(e)", "EX_met_DASH_L(e)", "EX_phe_DASH_L(e)",
"EX_pro_DASH_L(e)", "EX_ser_DASH_L(e)", "EX_thr_DASH_L(e)", "EX_trp_DASH_L(e)", "EX_tyr_DASH_L(e)", "EX_val_DASH_L(e)")
# find minimal glucose for each:
glc.per.aa <- c()
for (aa in aa.transports) {
m.aa.o <- changeBounds(m.aa, aa, lb=1) # require at least 1 mol of this AA to be produced
glc.per.aa[aa] <- -lp_obj(optimizeProb(m.aa.o))
}
summary( glc.per.aa)
atp.per.aa <- glc.per.aa * atp.per.glc
summary( atp.per.aa )
# average difference between production costs:
avg.diff <- 0
for (i in 1:19) {
for (j in (i+1):20) {
avg.diff <- avg.diff + abs( atp.per.aa[i] - atp.per.aa[j] )
}
avg.diff <- avg.diff / 190
avg.diff  # 13.18006 = average difference between AA molecules measured in ATP
m
library(sybilSBML);
a <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/MODEL1301290000_mycoplasma_pneumoniae.xml");
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/MODEL1301290000_mycoplasma_pneumoniae.xml");
# remove the requirement to produce maintenance ATP:
m <- changeBounds(m, "ATPM", lb=0)
class(m)
m2 <- readTSVmod(prefix="iJO1366", quoteChar = "\"")
class(m <- changeBounds(m, "ATPM", lb=0)
)
class(m2)
m2 <- changeBounds(m2, "ATPM", lb=0);
m <- changeBounds(m, "ATPM", lb=0)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
upt <- uptReact(ex)
ex[upt]
react_name(m)[76] # check if cobalamin can be used as energy source; if yes switch it off
upt
upt <- uptReact(ex)
m
str(m)
names(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1)  # set glucose uptake limit to 1.0
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/MODEL1011090000_Lactobacillus_plantarum.xml");
m <- changeBounds(m, "ATPM", lb=0)
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1)  # set glucose uptake limit to 1.0
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
upt <- uptReact(ex)
ex[upt]
react_name(m)[76] # check if cobalamin can be used as energy source; if yes switch it off
mg <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)    # allow unlimited uptake of glucose
mg <- changeObjFunc(mg, react = "EX_glc(e)", obj_coef = 1)   # but minimize this uptake (given what needs to be produced)
glc.per.mol.RNA <- c()  # use this to store the results
# how much of glucose is needed per Guanine (gua) de novo synthesis etc.?
# add missing (hypothetical) transport reactions:
m.nt <- addReact(mg, "ade_tr", c("ade[c]", "ade[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "gua_tr", c("gua[c]", "gua[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "ura_tr", c("ura[c]", "ura[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "csn_tr", c("csn[c]", "csn[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt.o <- changeBounds(m.nt, "EX_ade(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["A"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_csn(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["C"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_gua(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["G"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_ura(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["U"] <- -lp_obj(optimizeProb(m.nt.o))
atp.per.RNA <- glc.per.mol.RNA * atp.per.glc
atp.per.RNA
m
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/MODEL1011090000_Lactobacillus_plantarum.xml");
m
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/Bacillus_subtilis.xml");
m
m <- changeBounds(m, "ATPM", lb=0)
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
mg <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)    # allow unlimited uptake of glucose
mg <- changeObjFunc(mg, react = "EX_glc(e)", obj_coef = 1)   # but minimize this uptake (given what needs to be produced)
glc.per.mol.RNA <- c()  # use this to store the results
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/iNJ661_Mycobacterium_tuberculosis .xml");
m
m <- changeBounds(m, "ATPM", lb=0)
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
upt <- uptReact(ex)
ex[upt]
mg <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)    # allow unlimited uptake of glucose
glc.per.mol.RNA <- c()  # use this to store the results
# how much of glucose is needed per Guanine (gua) de novo synthesis etc.?
# add missing (hypothetical) transport reactions:
m.nt <- addReact(mg, "ade_tr", c("ade[c]", "ade[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "gua_tr", c("gua[c]", "gua[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "ura_tr", c("ura[c]", "ura[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "csn_tr", c("csn[c]", "csn[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt.o <- changeBounds(m.nt, "EX_ade(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["A"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_csn(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["C"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_gua(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["G"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_ura(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["U"] <- -lp_obj(optimizeProb(m.nt.o))
atp.per.RNA <- glc.per.mol.RNA * atp.per.glc
atp.per.RNA
m <- readTSVmod(prefix="iJO1366", quoteChar = "\"")
m <- changeBounds(m, "ATPM", lb=0)
mg <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)    # allow unlimited uptake of glucose
mg <- changeObjFunc(mg, react = "EX_glc(e)", obj_coef = 1)   # but minimize this uptake (given what needs to be produced)
shrinkMatrix(m, j="Ec_biomass_iJO1366_core_53p95M")
mg <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)    # allow unlimited uptake of glucose
mg <- changeObjFunc(mg, react = "EX_glc(e)", obj_coef = 1)   # but minimize this uptake (given what needs to be produced)
m.aa <- addReact(mg, "biomass.aa", c("ala_DASH_L[c]", "arg_DASH_L[c]", "asn_DASH_L[c]", "asp_DASH_L[c]", "cys_DASH_L[c]", "gln_DASH_L[c]", "glu_DASH_L[c]", "gly[c]", "his_DASH_L[c]", "ile_DASH_L[c]", "leu_DASH_L[c]", "lys_DASH_L[c]", "met_DASH_L[c]", "phe_DASH_L[c]", "pro_DASH_L[c]", "ser_DASH_L[c]", "thr_DASH_L[c]", "trp_DASH_L[c]", "tyr_DASH_L[c]", "val_DASH_L[c]"),
c(-0.499149, -0.28742, -0.234232, -0.234232, -0.088988, -0.255712, -0.255712, -0.595297, -0.092056,  -0.282306, -0.437778, -0.333448, -0.149336, -0.180021, -0.214798, -0.209684, -0.246506, -0.055234, -0.133993, -0.411184) )
m.aa <- changeBounds(m.aa, "biomass.aa", lb=1) # require at least 1 biomass unit to be produced
m.aa <- changeBounds(m.aa, ex["EX_glc(e)"], lb = -1000)
m.aa <- changeObjFunc(m.aa, react = "EX_glc(e)", obj_coef = 1)
g.AA <- lp_obj( optimizeProb(m.aa) ) # EX_glc(e) = -4.753151
g.AA / g.tot   # 0.4731462
# add (hypothetical) transport reactions:
m.aa <- mg
m.aa <- addReact(m.aa, "ala_DASH_L_tr", c("ala_DASH_L[c]", "ala_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ala_DASH_L(e)", c("ala_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "arg_DASH_L_tr", c("arg_DASH_L[c]", "arg_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_arg_DASH_L(e)", c("arg_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "asn_DASH_L_tr", c("asn_DASH_L[c]", "asn_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_asn_DASH_L(e)", c("asn_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "asp_DASH_L_tr", c("asp_DASH_L[c]", "asp_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_asp_DASH_L(e)", c("asp_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "cys_DASH_L_tr", c("cys_DASH_L[c]", "cys_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_cys_DASH_L(e)", c("cys_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "gln_DASH_L_tr", c("gln_DASH_L[c]", "gln_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_gln_DASH_L(e)", c("gln_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "glu_DASH_L_tr", c("glu_DASH_L[c]", "glu_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_glu_DASH_L(e)", c("glu_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "gly_tr", c("gly[c]", "gly[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_gly(e)", c("gly[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "his_DASH_L_tr", c("his_DASH_L[c]", "his_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_his_DASH_L(e)", c("his_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "his_DASH_L_tr", c("ile_DASH_L[c]", "ile_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ile_DASH_L(e)", c("ile_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "leu_DASH_L_tr", c("leu_DASH_L[c]", "leu_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_leu_DASH_L(e)", c("leu_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "lys_DASH_L_tr", c("lys_DASH_L[c]", "lys_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_lys_DASH_L(e)", c("lys_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "met_DASH_L_tr", c("met_DASH_L[c]", "met_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_met_DASH_L(e)", c("met_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "phe_DASH_L_tr", c("phe_DASH_L[c]", "phe_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_phe_DASH_L(e)", c("phe_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "pro_DASH_L_tr", c("pro_DASH_L[c]", "pro_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_pro_DASH_L(e)", c("pro_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "ser_DASH_L_tr", c("ser_DASH_L[c]", "ser_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ser_DASH_L(e)", c("ser_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "thr_DASH_L_tr", c("thr_DASH_L[c]", "thr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_thr_DASH_L(e)", c("thr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "trp_DASH_L_tr", c("trp_DASH_L[c]", "trp_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_trp_DASH_L(e)", c("trp_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "tyr_DASH_L_tr", c("tyr_DASH_L[c]", "tyr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_tyr_DASH_L(e)", c("tyr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "val_DASH_L_tr", c("val_DASH_L[c]", "val_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_val_DASH_L(e)", c("val_DASH_L[e]"), c(-1))   # transport reaction to NIL
aa.transports <- c("EX_ala_DASH_L(e)", "EX_arg_DASH_L(e)", "EX_asn_DASH_L(e)", "EX_asp_DASH_L(e)", "EX_cys_DASH_L(e)", "EX_gln_DASH_L(e)", "EX_glu_DASH_L(e)",
"EX_gly(e)", "EX_his_DASH_L(e)", "EX_ile_DASH_L(e)", "EX_leu_DASH_L(e)", "EX_lys_DASH_L(e)", "EX_met_DASH_L(e)", "EX_phe_DASH_L(e)",
"EX_pro_DASH_L(e)", "EX_ser_DASH_L(e)", "EX_thr_DASH_L(e)", "EX_trp_DASH_L(e)", "EX_tyr_DASH_L(e)", "EX_val_DASH_L(e)")
aa.transports
glc.per.aa <- c()
for (aa in aa.transports) {
m.aa.o <- changeBounds(m.aa, aa, lb=1) # require at least 1 mol of this AA to be produced
glc.per.aa[aa] <- -lp_obj(optimizeProb(m.aa.o))
}
glc.per.aa
glc.per.aa * 23.5
range(glc.per.aa * 23.5)
head(m)
m
getObjVal(m)
getObjValGLPK(m)
getObjVal(m)
library(sybil)
getObjVal(m)
m
length(m)
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/iNJ661_Mycobacterium_tuberculosis .xml");
eerr <- validateSBMLdocument(m)
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/iNJ661_Mycobacterium_tuberculosis .xml");
validateSBMLdocument(m)
m <- readSBMLmod(filename="iJO1366_Suppl/msb201165-s3.xml");
validateSBMLdocument(m)
m <- changeBounds(m, "ATPM", lb=0)
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
upt <- uptReact(ex)
ex[upt]
mg <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)    # allow unlimited uptake of glucose
mg <- changeObjFunc(mg, react = "EX_glc(e)", obj_coef = 1)   # but minimize this uptake (given what needs to be produced)
glc.per.mol.RNA <- c()  # use this to store the results
# how much of glucose is needed per Guanine (gua) de novo synthesis etc.?
# add missing (hypothetical) transport reactions:
m.nt <- addReact(mg, "ade_tr", c("ade[c]", "ade[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "gua_tr", c("gua[c]", "gua[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "ura_tr", c("ura[c]", "ura[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "csn_tr", c("csn[c]", "csn[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt.o <- changeBounds(m.nt, "EX_ade(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["A"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_csn(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["C"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_gua(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["G"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_ura(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["U"] <- -lp_obj(optimizeProb(m.nt.o))
atp.per.RNA <- glc.per.mol.RNA * atp.per.glc
atp.per.RNA
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/whole_genomes//BioModels_Database-r26_p2m-whole_genome_metabolism/BMID000000140205.xml");
m <- changeBounds(m, "ATPM", lb=0)
m <- changeBounds(m, "ATP", lb=0)
m
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
upt <- uptReact(ex)
ex[upt]
m <- readSBMLmod(filename="~/05_skews_bacteria/7_math_models/Bacillus_subtilis.xml");
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
m <- readSBMLmod(filename="~/Dropbox/Out_iAF692-09151620.xml");
m <- changeBounds(m, "ATPM", lb=0)
# set glucose uptake limit to 1.0:
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
m <- readSBMLmod(filename="~/Dropbox/Out_iIT341-09151846.xml");
# remove the requirement to produce maintenance ATP:
m <- changeBounds(m, "ATPM", lb=0)
# set glucose uptake limit to 1.0:
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1);
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
ex
# load the necessary functions
## -- by Martin Lercher: June 2014 --
rm(list=ls());
library(sybil)
library(glpkAPI)
# load E. coli model
m <- readTSVmod(prefix="iJO1366", quoteChar = "\"")
# remove the requirement to produce maintenance ATP:
m <- changeBounds(m, "ATPM", lb=0)
ex <- findExchReact(m)
# set glucose uptake limit to 1.0:
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1)
# What's the environment?
upt <- uptReact(ex)
ex[upt]
react_name(m)[76] # check if cobalamin can be used as energy source; if yes switch it off
# remove oxygen from the environment?
# m <- changeBounds(m, ex["EX_o2(e)"], lb = 0)  #
# biomass reaction:
shrinkMatrix(m, j="Ec_biomass_iJO1366_core_53p95M")
######################################################################################################
# Energy production
######################################################################################################
# how much ADP -> ATP can E. coli produce from the glucose?
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1)  # set glucose uptake limit to 1.0
m2 <- addReact(m, "burnATP", c("atp[c]", "h2o[c]", "adp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # same as ATPM
m2 <- changeObjFunc(m2, react = "burnATP")
atp.per.glc <- lp_obj( optimizeProb(m2) )  # 23.500
atp.per.glc
# alternatively:
# m3 <- changeObjFunc(m, react = "ATPM")
# optimizeProb(m3)
# how much GDP -> GTP can E. coli produce from the glucose? The same as ATP, of course!
m3 <- addReact(m, "burnGTP", c("gtp[c]", "h2o[c]", "gdp[c]", "pi[c]", "h[c]"), c(-1, -1, 1, 1, 1))   # similar to ATPM
m3 <- changeObjFunc(m3, react = "burnGTP")
optimizeProb(m3) # 23.500
# how much of ATP de novo synthesis is possible?
m4 <- addReact(m, "atp_tr", c("atp[c]", "atp[e]"), c(-1, 1))   # transport reaction to extracellular
m4 <- addReact(m4, "EX_atp(e)", "atp[e]", -1)   # exchange reaction extracellular -> NIL
m4 <- changeObjFunc(m4, react = "EX_atp(e)")
optimizeProb(m4)  # 0.530
# minimize the amount of glucose taken up:
mg <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)    # allow unlimited uptake of glucose
mg <- changeObjFunc(mg, react = "EX_glc(e)", obj_coef = 1)   # but minimize this uptake (given what needs to be produced)
glc.per.mol.RNA <- c()  # use this to store the results
# how much of glucose is needed per Guanine (gua) de novo synthesis etc.?
# add missing (hypothetical) transport reactions:
m.nt <- addReact(mg, "ade_tr", c("ade[c]", "ade[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "gua_tr", c("gua[c]", "gua[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "ura_tr", c("ura[c]", "ura[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(mg, "csn_tr", c("csn[c]", "csn[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt.o <- changeBounds(m.nt, "EX_ade(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["A"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_csn(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["C"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_gua(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["G"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_ura(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
glc.per.mol.RNA["U"] <- -lp_obj(optimizeProb(m.nt.o))
atp.per.RNA <- glc.per.mol.RNA * atp.per.glc
atp.per.RNA
mean(atp.per.RNA)
# add (hypothetical) transport reactions:
m.aa <- mg
m.aa <- addReact(m.aa, "ala_DASH_L_tr", c("ala_DASH_L[c]", "ala_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ala_DASH_L(e)", c("ala_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "arg_DASH_L_tr", c("arg_DASH_L[c]", "arg_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_arg_DASH_L(e)", c("arg_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "asn_DASH_L_tr", c("asn_DASH_L[c]", "asn_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_asn_DASH_L(e)", c("asn_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "asp_DASH_L_tr", c("asp_DASH_L[c]", "asp_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_asp_DASH_L(e)", c("asp_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "cys_DASH_L_tr", c("cys_DASH_L[c]", "cys_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_cys_DASH_L(e)", c("cys_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "gln_DASH_L_tr", c("gln_DASH_L[c]", "gln_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_gln_DASH_L(e)", c("gln_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "glu_DASH_L_tr", c("glu_DASH_L[c]", "glu_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_glu_DASH_L(e)", c("glu_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "gly_tr", c("gly[c]", "gly[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_gly(e)", c("gly[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "his_DASH_L_tr", c("his_DASH_L[c]", "his_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_his_DASH_L(e)", c("his_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "his_DASH_L_tr", c("ile_DASH_L[c]", "ile_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ile_DASH_L(e)", c("ile_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "leu_DASH_L_tr", c("leu_DASH_L[c]", "leu_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_leu_DASH_L(e)", c("leu_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "lys_DASH_L_tr", c("lys_DASH_L[c]", "lys_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_lys_DASH_L(e)", c("lys_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "met_DASH_L_tr", c("met_DASH_L[c]", "met_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_met_DASH_L(e)", c("met_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "phe_DASH_L_tr", c("phe_DASH_L[c]", "phe_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_phe_DASH_L(e)", c("phe_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "pro_DASH_L_tr", c("pro_DASH_L[c]", "pro_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_pro_DASH_L(e)", c("pro_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "ser_DASH_L_tr", c("ser_DASH_L[c]", "ser_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ser_DASH_L(e)", c("ser_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "thr_DASH_L_tr", c("thr_DASH_L[c]", "thr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_thr_DASH_L(e)", c("thr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "trp_DASH_L_tr", c("trp_DASH_L[c]", "trp_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_trp_DASH_L(e)", c("trp_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "tyr_DASH_L_tr", c("tyr_DASH_L[c]", "tyr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_tyr_DASH_L(e)", c("tyr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "val_DASH_L_tr", c("val_DASH_L[c]", "val_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_val_DASH_L(e)", c("val_DASH_L[e]"), c(-1))   # transport reaction to NIL
aa.transports <- c("EX_ala_DASH_L(e)", "EX_arg_DASH_L(e)", "EX_asn_DASH_L(e)", "EX_asp_DASH_L(e)", "EX_cys_DASH_L(e)", "EX_gln_DASH_L(e)", "EX_glu_DASH_L(e)",
"EX_gly(e)", "EX_his_DASH_L(e)", "EX_ile_DASH_L(e)", "EX_leu_DASH_L(e)", "EX_lys_DASH_L(e)", "EX_met_DASH_L(e)", "EX_phe_DASH_L(e)",
"EX_pro_DASH_L(e)", "EX_ser_DASH_L(e)", "EX_thr_DASH_L(e)", "EX_trp_DASH_L(e)", "EX_tyr_DASH_L(e)", "EX_val_DASH_L(e)")
# find minimal glucose for each:
glc.per.aa <- c()
for (aa in aa.transports) {
m.aa.o <- changeBounds(m.aa, aa, lb=1) # require at least 1 mol of this AA to be produced
glc.per.aa[aa] <- -lp_obj(optimizeProb(m.aa.o))
}
summary( glc.per.aa)
atp.per.aa <- glc.per.aa * atp.per.glc
summary( atp.per.aa )
head(glc.per.aa)
head(atp.per.aa)
save.image(file = "working_NtAtp02.RData");
mean(atp.per.aa)
save.image(file = "working_NtAtp02.RData")
library(sybil)
library(glpkAPI)
# load E. coli model
m <- readTSVmod(prefix="iJO1366", quoteChar = "\"")
# remove the requirement to produce maintenance ATP:
m <- changeBounds(m, "ATPM", lb=0)
# set glucose uptake limit to 1.0:
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)
# What's the environment?
ex <- findExchReact(m)
upt <- uptReact(ex)
ex[upt]
react_name(m)[76] # check if cobalamin can be used as energy source; if yes switch it off
ex <- findExchReact(m)
m <- changeBounds(m, ex["EX_glc(e)"], lb = -1000)
upt <- uptReact(ex)
ex[upt]
react_name(m)[76] # check if cobalamin can be used as energy source; if yes switch it off
shrinkMatrix(m, j="Ec_biomass_iJO1366_WT_53p95M")
m2 <- changeObjFunc(m, react = c("EX_nh4(e)", "EX_so4(e)", "EX_pi(e)"), obj_coef = c(1, 1, 1))   # minimize this uptake (given what needs to be produced)
nsp.per.mol.RNA <- c()  # use this to store the results
# how much of NSP is needed per Guanine (gua) de novo synthesis etc.?
# add missing (hypothetical) transport reactions:
m.nt <- m2
m.nt <- addReact(m.nt, "ade_tr", c("ade[c]", "ade[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(m.nt, "gua_tr", c("gua[c]", "gua[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(m.nt, "ura_tr", c("ura[c]", "ura[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt <- addReact(m.nt, "csn_tr", c("csn[c]", "csn[e]"), c(-1, 1))   # transport reaction to extracellular
m.nt.o <- changeBounds(m.nt, "EX_ade(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
nsp.per.mol.RNA["A"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_csn(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
nsp.per.mol.RNA["C"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_gua(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
nsp.per.mol.RNA["G"] <- -lp_obj(optimizeProb(m.nt.o))
m.nt.o <- changeBounds(m.nt, "EX_ura(e)", lb=1) # require at least 1 mol of this nucleotide to be produced
nsp.per.mol.RNA["U"] <- -lp_obj(optimizeProb(m.nt.o))
nsp.per.mol.RNA
# add (hypothetical) transport reactions:
m.aa <- m2
m.aa <- addReact(m.aa, "ala_DASH_L_tr", c("ala_DASH_L[c]", "ala_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ala_DASH_L(e)", c("ala_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "arg_DASH_L_tr", c("arg_DASH_L[c]", "arg_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_arg_DASH_L(e)", c("arg_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "asn_DASH_L_tr", c("asn_DASH_L[c]", "asn_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_asn_DASH_L(e)", c("asn_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "asp_DASH_L_tr", c("asp_DASH_L[c]", "asp_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_asp_DASH_L(e)", c("asp_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "cys_DASH_L_tr", c("cys_DASH_L[c]", "cys_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_cys_DASH_L(e)", c("cys_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "gln_DASH_L_tr", c("gln_DASH_L[c]", "gln_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_gln_DASH_L(e)", c("gln_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "glu_DASH_L_tr", c("glu_DASH_L[c]", "glu_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_glu_DASH_L(e)", c("glu_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "gly_tr", c("gly[c]", "gly[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_gly(e)", c("gly[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "his_DASH_L_tr", c("his_DASH_L[c]", "his_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_his_DASH_L(e)", c("his_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "his_DASH_L_tr", c("ile_DASH_L[c]", "ile_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ile_DASH_L(e)", c("ile_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "leu_DASH_L_tr", c("leu_DASH_L[c]", "leu_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_leu_DASH_L(e)", c("leu_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "lys_DASH_L_tr", c("lys_DASH_L[c]", "lys_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_lys_DASH_L(e)", c("lys_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "met_DASH_L_tr", c("met_DASH_L[c]", "met_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_met_DASH_L(e)", c("met_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "phe_DASH_L_tr", c("phe_DASH_L[c]", "phe_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_phe_DASH_L(e)", c("phe_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "pro_DASH_L_tr", c("pro_DASH_L[c]", "pro_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_pro_DASH_L(e)", c("pro_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "ser_DASH_L_tr", c("ser_DASH_L[c]", "ser_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_ser_DASH_L(e)", c("ser_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "thr_DASH_L_tr", c("thr_DASH_L[c]", "thr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_thr_DASH_L(e)", c("thr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "trp_DASH_L_tr", c("trp_DASH_L[c]", "trp_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_trp_DASH_L(e)", c("trp_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "tyr_DASH_L_tr", c("tyr_DASH_L[c]", "tyr_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_tyr_DASH_L(e)", c("tyr_DASH_L[e]"), c(-1))   # transport reaction to NIL
m.aa <- addReact(m.aa, "val_DASH_L_tr", c("val_DASH_L[c]", "val_DASH_L[e]"), c(-1, 1))   # transport reaction to extracellular
m.aa <- addReact(m.aa, "EX_val_DASH_L(e)", c("val_DASH_L[e]"), c(-1))   # transport reaction to NIL
aa.transports <- c("EX_ala_DASH_L(e)", "EX_arg_DASH_L(e)", "EX_asn_DASH_L(e)", "EX_asp_DASH_L(e)", "EX_cys_DASH_L(e)", "EX_gln_DASH_L(e)", "EX_glu_DASH_L(e)",
"EX_gly(e)", "EX_his_DASH_L(e)", "EX_ile_DASH_L(e)", "EX_leu_DASH_L(e)", "EX_lys_DASH_L(e)", "EX_met_DASH_L(e)", "EX_phe_DASH_L(e)",
"EX_pro_DASH_L(e)", "EX_ser_DASH_L(e)", "EX_thr_DASH_L(e)", "EX_trp_DASH_L(e)", "EX_tyr_DASH_L(e)", "EX_val_DASH_L(e)")
m.aa
nsp.per.aa <- c()
for (aa in aa.transports) {
m.aa.o <- changeBounds(m.aa, aa, lb=1) # require at least 1 mol of this AA to be produced
nsp.per.aa[aa] <- -lp_obj(optimizeProb(m.aa.o))
}
summary( nsp.per.aa) # median = 1, max=4
nsp.per.aa
t(nsp.per.aa)
length(nsp.per.aa)
nsp.per.aa
a <- data.frame(a = names(nsp.per.aa), b = nsp.per.aa)
a
dim(a)
